<Page x:Class="Sample.Views.Content.GoogleMapControl_FeaturesPage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:converters="using:Sample.Views"
	  xmlns:dynamicMap="using:Cartography.DynamicMap"
	  xmlns:gmc="using:Cartography.DynamicMap.GoogleMap.iOS"
	  xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:ios="http://nventive.com/ios"
	  xmlns:android="http://nventive.com/android"
	  mc:Ignorable="d android ios">

	<!-- This page exists solely to display the ability of cartography to display a map with google maps as the provider on iOS instead of apple maps -->

	<Page.Resources>
		<ResourceDictionary>
			<!--To make sure this works on iOS, these assets must exist not only with normal scale, but also 200 and 300 scale.-->
			<converters:FromPushpinEntityToStringConverter x:Key="PushpinEntityToMapPin"
														   UnselectedValue="ms-appx:///Assets/Pushpin/inactive.png"
														   SelectedValue="ms-appx:///Assets/Pushpin/active.png" />

			<converters:FromNullableBoolToVisibilityConverter x:Key="IsTrueToVisible" />

			<converters:FromNullableBoolToVisibilityConverter x:Key="IsTrueToCollapsed"
															  VisibilityIfTrue="Collapsed" />
		</ResourceDictionary>
	</Page.Resources>

	<Grid Background="White">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<StackPanel Grid.Row="0">
			<Button x:Name="ReturnToDynamicMapMenu"
					Command="{Binding FeatureToDynamicMapMenu}"
					Content="Return to DynamicMap menu"
					Margin="0,40,0,0" />

			<TextBlock Text="DynamicMap Feature Page" />
		</StackPanel>

		<Grid Grid.Row="1"
			  Background="Black"
			  Padding="10">

			<StackPanel>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>



					<!-- Selected pushpin label -->
					<TextBlock Text="Selected pushpin:"
							   Margin="0,0,10,0"
							   Grid.Column="0" />

					<!-- Selected pushpin value -->
					<TextBlock Text="{Binding SelectedPushpin}"
							   HorizontalAlignment="Left"
							   Grid.Column="1"
							   TextWrapping="Wrap" />
				</Grid>
				<TextBlock Text="The location service is in error"
						   VerticalAlignment="Top"
						   HorizontalAlignment="Left"
						   Visibility="{Binding IsLocationEnabled, Converter={StaticResource IsTrueToCollapsed}}" />
				<TextBlock Text="This sample includes auto-zoom to the pushpins"
						   Foreground="White"
						   HorizontalAlignment="Left" />
				<TextBlock Text="{Binding MapViewPortCustomString}"
						   TextWrapping="Wrap"
						   HorizontalAlignment="Left" />
				<TextBlock Text="{Binding MessageErrorLocateMe}"
						   Visibility="{Binding IsLocationEnabled, Converter={StaticResource IsTrueToCollapsed}}" />
			</StackPanel>

		</Grid>

		<Grid Grid.Row="2">
			<win:Grid>
				<TextBlock Text="Not supported on windows as of now" />
			</win:Grid>

			<!--Android -->
			<android:Grid>
				<!--SelectedIconHeight and SelectedIconWidth are only needed on iOS.
				They must have the exact same dimensions as the normal-scale asset (here, pin_red_selection_base.png)-->
				<dynamicMap:MapControl ViewModel="{Binding}"
									   SelectionMode="Single"
									   AutolocateButtonVisibility="Collapsed"
									   dynamicMap:MapControlBehavior.DisableRotation="True"
									   dynamicMap:MapControlBehavior.PushpinImageSelector="{StaticResource PushpinEntityToMapPin}"
									   CompassButtonVisibility="Collapsed"
									   dynamicMap:MapControlBehavior.SelectedIconWidth="24"
									   dynamicMap:MapControlBehavior.SelectedIconHeight="40" />
			</android:Grid>

			<!-- iOS -->
			<ios:Grid>
				<gmc:GoogleMapControl ViewModel="{Binding}"
									  SelectionMode="Single"
									  AutolocateButtonVisibility="Collapsed"
									  dynamicMap:MapControlBehavior.DisableRotation="True"
									  dynamicMap:MapControlBehavior.PushpinImageSelector="{StaticResource PushpinEntityToMapPin}"
									  CompassButtonVisibility="Collapsed"
									  dynamicMap:MapControlBehavior.SelectedIconWidth="24"
									  dynamicMap:MapControlBehavior.SelectedIconHeight="40" />
			</ios:Grid>

			<!--Reticle-->
			<Rectangle Width="50"
					   Height="2"
					   Fill="Black"
					   IsHitTestVisible="False"
					   HorizontalAlignment="Center"
					   VerticalAlignment="Center" />
			<Rectangle Width="2"
					   Height="50"
					   Fill="Black"
					   IsHitTestVisible="False"
					   HorizontalAlignment="Center"
					   VerticalAlignment="Center" />
		</Grid>

		<Grid VerticalAlignment="Bottom"
			  HorizontalAlignment="Stretch"
			  Margin="20"
			  Grid.Row="2">

			<StackPanel Margin="0,0,10,0"
						HorizontalAlignment="Left">
				<!-- Add Pushpin button -->
				<Button Content="Add Pushpin"
						Command="{Binding AddPushpin}"
						HorizontalContentAlignment="Center"
						Margin="0,10" />

				<!-- Remove Selected Pushpin button -->
				<Button Content="Remove Selected Pushpin"
						Command="{Binding RemoveSelectedPushpin}"
						HorizontalContentAlignment="Center"
						Margin="0,10" />
			</StackPanel>

		</Grid>

		<StackPanel Orientation="Vertical"
					Grid.Row="3"
					Padding="10">
			<StackPanel Orientation="Horizontal"
						Padding="0,4">
				<Button Content="Locate me"
						Command="{Binding LocateMe}"
						Padding="3"
						Margin="4,0" />
				<Button Content="Update Viewport"
						Command="{Binding UpdateViewPort}"
						Padding="3"
						Margin="4,0" />
				<CheckBox IsChecked="{Binding IsMapFollowTheUser, Mode=TwoWay}"
						  Margin="4,0">
					<TextBlock Text="Follow me" />
				</CheckBox>
			</StackPanel>
			<StackPanel Orientation="Horizontal">
				<TextBlock Text="Latitude:"
						   Margin="0,0,20,0" />
				<TextBox Text="{Binding ViewPortLatitude, Mode=TwoWay}"
						 Width="90" />
			</StackPanel>
			<StackPanel Orientation="Horizontal">
				<TextBlock Text="Longitude:"
						   Margin="0,0,20,0" />
				<TextBox Text="{Binding ViewPortLongitude, Mode=TwoWay}"
						 Width="90" />
			</StackPanel>
		</StackPanel>
	</Grid>
</Page>
