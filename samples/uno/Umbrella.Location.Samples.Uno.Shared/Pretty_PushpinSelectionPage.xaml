<Page x:Class="Umbrella.Location.Samples.Uno.Pretty_PushpinSelectionPage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:local="using:Umbrella.Location.Samples.Uno.Shared"
	  xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:xamarin="http:///umbrella/ui/xamarin"
	  xmlns:ios="http:///umbrella/ui/ios"
	  xmlns:toolkit="using:Uno.UI.Toolkit"
	  xmlns:dynamicmap="using:Umbrella.Location.DynamicMap"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:map="using:Umbrella.Location.DynamicMap"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:converters="using:Umbrella.Location.Samples.Uno.Converters"
	  xmlns:android="http://nventive.com/android"
	  mc:Ignorable="d android xamarin ios ">

	<Page.Resources>
		<ResourceDictionary>
			<!--To make sure this works on iOS, these assets must exist not only with normal scale, but also 200 and 300 scale.-->
			<converters:FromPushpinEntityToStringConverter x:Key="StoreDataToMapPin"
														   DefaultValue="ms-appx:///Assets/DynamicMap/pin_bleu_normal_base.png"
														   SelectedValue="ms-appx:///Assets/DynamicMap/pin_red_selection_base.png" />

			<converters:FromNullableBoolToVisibilityConverter x:Key="IsTrueToVisible" />
			<converters:FromNullableBoolToVisibilityConverter x:Key="IsTrueToCollapsed"
															  VisibilityIfTrue="Collapsed" />

			<DataTemplate x:Key="PushpinListItem">
				<Grid Padding="16,0"
					  Background="{StaticResource Color01Brush}">
					<Grid BorderThickness="0,0,0,1"
						  BorderBrush="{StaticResource Color04Brush}"
						  Padding="0,20">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="auto" />
						</Grid.ColumnDefinitions>

						<!-- Store Address -->
						<StackPanel>
							<TextBlock Style="{StaticResource Typo04}"
									   MaxLines="1">
								<Run Text="{Binding Name}" />
							</TextBlock>

							<TextBlock Style="{StaticResource Typo03}"
									   MaxLines="1">
								<Run Text="{Binding Address}" /><Run Text="," />
								<Run Text="{Binding City}" /><Run Text="," />
								<Run Text="{Binding Province}" />
							</TextBlock>
						</StackPanel>

						<!-- Distance -->
						<TextBlock x:Name="DistanceTextBlock"
								   Style="{StaticResource Typo04}"
								   Grid.Column="1"
								   TextAlignment="Center"
								   VerticalAlignment="Center"
								   HorizontalAlignment="Center">
							<!-- Bind distance between pushpin and user proprety/feed here -->
							<Run Text="20" />
							<Run Text="&#x0a;km" />
						</TextBlock>
					</Grid>
				</Grid>
			</DataTemplate>
		</ResourceDictionary>
	</Page.Resources>

	<Grid Background="{StaticResource Color01Brush}">

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="Banner">
				<VisualState x:Name="Collapsed" />

				<VisualState x:Name="Visible">
					<VisualState.Setters>
						<Setter Target="CurrentLocationGrid.(UIElement.RenderTransform).(TranslateTransform.Y)"
								Value="-55" />
					</VisualState.Setters>
				</VisualState>

			</VisualStateGroup>

			<VisualStateGroup x:Name="LocationStates">
				<VisualState x:Name="Map" />

				<VisualState x:Name="List">
					<VisualState.Setters>
						<Setter Target="CurrentLocationGrid.Opacity"
								Value="0" />
						<Setter Target="PushpinBanner.Opacity"
								Value="0" />
						<Setter Target="TooFarBanner.Opacity"
								Value="0" />
						<Setter Target="NoResultsOrErrorBanner.Opacity"
								Value="0" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<!-- CommandBar -->
		<CommandBar Content="Pushpin selection"
					Grid.Row="0"
					toolkit:VisibleBoundsPadding.PaddingMask="All" />

		<!-- Map -->
		<Grid Grid.RowSpan="2"
			  Grid.Row="1"
			  Visibility="{Binding [IsMapShowing], Converter={StaticResource IsTrueToVisible}, FallbackValue=Collapsed}">
			<!-- Windows -->
			<!-- In order to show the map in Windows, you must set a default MapControl style. Otherwise, nothing will be displayed -->
			<win:Grid>
				<map:MapControl ViewModel="{Binding}"
								SelectionMode="Single"
								PushpinIconsPositionOrigin="0.5,1"
								PushpinIcon="ms-appx:///Assets/DynamicMap/pin_bleu_normal_base.png"
								SelectedPushpinIcon="ms-appx:///Assets/DynamicMap/pin_red_selection_base.png" />
			</win:Grid>

			<!-- Android || iOS -->
			<xamarin:Grid>
				<!--SelectedIconHeight and SelectedIconWidth are only needed on iOS.
				They must have the exact same dimensions as the normal-scale asset (here, pin_red_selection_base.png)-->
				<map:MapControl ViewModel="{Binding}"
								ios:ShowPointsOfInterest="True"
								SelectionMode="Single"
								AutolocateButtonVisibility="Collapsed"
								map:MapControlBehavior.DisableRotation="True"
								map:MapControlBehavior.PushpinImageSelector="{StaticResource StoreDataToMapPin}"
								map:MapControlBehavior.SelectedIconWidth="24"
								map:MapControlBehavior.SelectedIconHeight="40" />
			</xamarin:Grid>
		</Grid>

		<!-- Gray background for list of pushpins-->
		<Border Background="{StaticResource Color04Brush}"
				Visibility="{Binding [IsMapShowing], Converter={StaticResource IsTrueToCollapsed}, FallbackValue=Collapsed}"
				Grid.Row="1"
				Grid.RowSpan="2" />

		<!-- Pushpin list-->
		<ListView Grid.Row="2"
				  ItemsSource="{Binding [Pushpins]}"
				  HorizontalContentAlignment="Stretch"
				  Visibility="{Binding [IsMapShowing], Converter={StaticResource IsTrueToCollapsed}, FallbackValue=Collapsed}"
				  Background="{StaticResource Color04Brush}"
				  ItemTemplate="{StaticResource PushpinListItem}"
				  IsItemClickEnabled="True"
				  Margin="16"
				  SelectionMode="None">
		</ListView>

		<!-- Show pushpin list Button -->
		<Grid Grid.Row="1"
			  Visibility="{Binding [IsMapShowing], Converter={StaticResource IsTrueToVisible}, FallbackValue=Collapsed}">

			<Button AutomationProperties.Name="ShowList"
					Command="{Binding [ToggleShowMap]}"
					Style="{StaticResource ToggleMapButtonStyle}"
					HorizontalAlignment="Right"
					Margin="0,20,20,0"
					Padding="8"
					Grid.Column="1">
				<!-- list icon -->
				<Path Data="M7,4h12c0.6,0,1,0.4,1,1s-0.4,1-1,1H7C6.4,6,6,5.6,6,5S6.4,4,7,4z M3.5,6.5
	C2.7,6.5,2,5.8,2,5s0.7-1.5,1.5-1.5S5,4.2,5,5S4.3,6.5,3.5,6.5z M3.5,12.5C2.7,12.5,2,11.8,2,11s0.7-1.5,1.5-1.5S5,10.2,5,11
	S4.3,12.5,3.5,12.5z M3.5,18.5C2.7,18.5,2,17.8,2,17s0.7-1.5,1.5-1.5S5,16.2,5,17S4.3,18.5,3.5,18.5z M7,10h12c0.6,0,1,0.4,1,1
	s-0.4,1-1,1H7c-0.6,0-1-0.4-1-1S6.4,10,7,10z M7,16h12c0.6,0,1,0.4,1,1s-0.4,1-1,1H7c-0.6,0-1-0.4-1-1S6.4,16,7,16z"
					  Stretch="UniformToFill"
					  Width="24"
					  Height="24"
					  Fill="{StaticResource Color01Brush}"
					  HorizontalAlignment="Center" />
			</Button>
		</Grid>

		<!-- Show map Button -->
		<Grid Grid.Row="1"
			  Visibility="{Binding [IsMapShowing], Converter={StaticResource IsTrueToCollapsed}, FallbackValue=Collapsed}">

			<Button AutomationProperties.Name="ShowMap"
					Command="{Binding [ToggleShowMap]}"
					Style="{StaticResource ToggleMapButtonStyle}"
					HorizontalAlignment="Right"
					Margin="0,20,20,0"
					Padding="8"
					Grid.Column="1">
				<!-- map icon -->
				<Path Data="M16.6,10.8l2.8,1.4L21,19l-3.4-1.4L16.6,10.8z M5.9,10.5l-3.2,1.7L1,19l3.9-1.6L5.9,10.5z
	 M10.6,18.9v-3.1l-0.2-0.3c-1.2-1.5-2.2-2.9-2.8-4.2l-0.8-0.4l-1,6.6L10.6,18.9z M15.8,10.7l-1.2,0.6c-0.8,1.2-1.7,2.6-2.8,4.2
	l-0.2,0.3v3.1l5.3-1.5L15.8,10.7z M6.6,6.7C6.6,4,8.6,2,11,2s4.4,2,4.4,4.7c0,1.7-1.5,4.5-4.4,8.2C8.1,11.1,6.6,8.3,6.6,6.7z
	 M8.8,6.5c0,1.3,1,2.2,2.2,2.2s2.2-1,2.2-2.2c0-1.3-1-2.2-2.2-2.2C9.8,4.2,8.8,5.2,8.8,6.5z"
					  Stretch="Uniform"
					  Width="22"
					  Height="22"
					  Fill="{StaticResource Color01Brush}"
					  HorizontalAlignment="Center" />
			</Button>
		</Grid>

		<!-- Locate me button -->
		<Grid Margin="0,0,16,16"
			  x:Name="CurrentLocationGrid"
			  Grid.Row="2"
			  Opacity="1"
			  HorizontalAlignment="Right"
			  VerticalAlignment="Bottom"
			  toolkit:VisibleBoundsPadding.PaddingMask="All">

			<Grid.RenderTransform>
				<TranslateTransform Y="0" />
			</Grid.RenderTransform>

			<!-- Current location button -->
			<Button x:Name="CurrentLocationButton"
					Command="{Binding [LocateMe]}"
					Width="Auto"
					Margin="4,0,0,0"
					Style="{StaticResource ActiveButtonMapIconCircularStyle}">
				<!-- location icon -->
				<Path Data="M13,11c0,1.1-0.9,2-2,2s-2-0.9-2-2s0.9-2,2-2S13,9.9,13,11z M22,11c0,0.6-0.4,1-1,1h-2c0,0,0,0-0.1,0
	c-0.5,3.6-3.3,6.5-6.9,6.9c0,0,0,0,0,0.1v2c0,0.6-0.4,1-1,1s-1-0.4-1-1v-2c0,0,0,0,0-0.1c-3.6-0.5-6.5-3.3-6.9-6.9c0,0,0,0-0.1,0H1
	c-0.6,0-1-0.4-1-1s0.4-1,1-1h2c0,0,0,0,0.1,0C3.5,6.4,6.4,3.5,10,3.1c0,0,0,0,0-0.1V1c0-0.6,0.4-1,1-1s1,0.4,1,1v2c0,0,0,0,0,0.1
	c3.6,0.5,6.5,3.3,6.9,6.9c0,0,0,0,0.1,0h2C21.6,10,22,10.4,22,11z M16,11c0-2.8-2.2-5-5-5s-5,2.2-5,5s2.2,5,5,5S16,13.8,16,11z"
					  Stretch="UniformToFill"
					  Width="24"
					  Height="24"
					  Margin="7"
					  VerticalAlignment="Center"
					  Fill="{StaticResource Color01Brush}"
					  HorizontalAlignment="Center" />
			</Button>
		</Grid>

		<!-- Error banner -->
		<Grid x:Name="NoResultsOrErrorBanner"
			  Grid.Row="2"
			  Visibility="{Binding [IsLocateMeOnError], Converter={StaticResource IsTrueToVisible}, FallbackValue=Collapsed}"
			  Opacity="1"
			  VerticalAlignment="Bottom"
			  Padding="16,0"
			  Height="72"
			  Background="{StaticResource Color03Brush}">

			<StackPanel VerticalAlignment="Center"
						HorizontalAlignment="Left">
				<TextBlock Style="{StaticResource Typo02}"
						   MaxLines="1"
						   Text="Something went wrong" />

				<TextBlock Style="{StaticResource Typo02}"
						   Text="Please activate your location service" />
			</StackPanel>
		</Grid>

		<!-- Pushpin banner -->
		<Grid Grid.Row="2"
			  x:Name="PushpinBanner"
			  Visibility="{Binding [IsPushpinSelected], Converter={StaticResource IsTrueToVisible}, FallbackValue=Collapsed}"
			  VerticalAlignment="Bottom"
			  Opacity="1"
			  HorizontalAlignment="Stretch"
			  Background="{StaticResource Color03Brush}">

			<Grid Height="72"
				  Padding="16,0">

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="60" />
				</Grid.ColumnDefinitions>

				<!-- Store Address -->
				<StackPanel VerticalAlignment="Center"
							HorizontalAlignment="Left">
					<TextBlock Style="{StaticResource Typo02}"
							   MaxLines="1">
						<Run Text="{Binding [SelectedPushpin].Name}" />
					</TextBlock>

					<TextBlock Style="{StaticResource Typo01}"
							   MaxLines="1"
							   toolkit:VisibleBoundsPadding.PaddingMask="All">
						<Run Text="{Binding [SelectedPushpin].Address}" /><Run Text="," />
						<Run Text="{Binding [SelectedPushpin].City}" /><Run Text="," />
						<Run Text="{Binding [SelectedPushpin].Province}" />
					</TextBlock>

				</StackPanel>

				<!-- Distance -->
				<TextBlock x:Name="DistanceTextBlock"
						   Style="{StaticResource Typo02}"
						   Grid.Column="1"
						   TextAlignment="Center"
						   VerticalAlignment="Center"
						   HorizontalAlignment="Center"
						   toolkit:VisibleBoundsPadding.PaddingMask="All">
					<!-- Bind distance between pushpin and user proprety/feed here -->
					<Run Text="20" />
					<Run Text="&#x0a;km" />
				</TextBlock>
			</Grid>
		</Grid>

		<!-- Too far banner -->
		<Grid x:Name="TooFarBanner"
			  Grid.Row="2"
			  Visibility="{Binding [IsTooFar], Converter={StaticResource IsTrueToVisible}, FallbackValue=Collapsed}"
			  Opacity="1"
			  VerticalAlignment="Bottom"
			  Padding="16,0"
			  Height="72"
			  Background="{StaticResource Color03Brush}">

			<StackPanel VerticalAlignment="Center"
						HorizontalAlignment="Left">
				<TextBlock Style="{StaticResource Typo02}"
						   MaxLines="1"
						   Text="You're too far!" />

				<TextBlock Style="{StaticResource Typo01}"
						   Text="We cannot display your pushpins."
						   toolkit:VisibleBoundsPadding.PaddingMask="All" />
			</StackPanel>
		</Grid>
		<Grid></Grid>
	</Grid>
</Page>
