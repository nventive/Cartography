<Page x:Class="Umbrella.Location.Samples.Uno.DynamicMap_FeaturesPage_Google"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:local="using:Umbrella.Location.Samples.Uno.Shared"
	  xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:xamarin="http:///umbrella/ui/xamarin"
	  xmlns:toolkit="using:Uno.UI.Toolkit"
	  xmlns:android="http://nventive.com/android"
	  xmlns:ios="http:///umbrella/ui/ios"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:converters="using:Umbrella.Location.Samples.Uno.Converters"
	  xmlns:dynamicmap="using:Umbrella.Location.DynamicMap"
	  mc:Ignorable="ios android xamarin">

	<Page.Resources>
		<ResourceDictionary>
			<converters:FromPushpinEntityToStringConverter x:Key="PushpinEntityToMapPin"
														   DefaultValue="ms-appx:///Assets/DynamicMap/pin_bleu_normal_base.png"
														   SelectedValue="ms-appx:///Assets/DynamicMap/pin_red_selection_base.png" />

			<converters:FromNullableBoolToVisibilityConverter x:Key="IsTrueToVisible" />

			<converters:FromNullableBoolToVisibilityConverter x:Key="IsTrueToCollapsed"
															  VisibilityIfTrue="Collapsed" />
		</ResourceDictionary>
	</Page.Resources>

	<!--Sample with Google implementation-->
	<Grid Background="White">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<!-- CommandBar -->
		<CommandBar Content="Features overview (Google)"
					Grid.Row="0"
					toolkit:VisibleBoundsPadding.PaddingMask="All" />

		<Grid Grid.Row="1"
			  Background="Black"
			  Padding="10">

			<StackPanel>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>

					<!-- Selected pushpin label -->
					<TextBlock Text="Selected pushpin:"
							   Foreground="White"
							   Margin="0,0,10,0"
							   Grid.Column="0" />

					<!-- Selected pushpin value -->
					<TextBlock Text="{Binding [SelectedPushpin].Coordinates}"
							   Foreground="White"
							   Grid.Column="1" />
				</Grid>
				<TextBlock Text="The location service is in error"
						   VerticalAlignment="Top"
						   HorizontalAlignment="Right"
						   Foreground="White"
						   Visibility="{Binding [IsLocateMeOnError], Converter={StaticResource IsTrueToVisible}}" />
				<TextBlock Text="This sample includes auto-zoom to the pushpins"
						   Foreground="White" />
				<TextBlock Text="{Binding [MapViewPort]}"
						   Foreground="White" />
				<TextBlock Text="{Binding [MapViewPortCoordinates]}"
						   Foreground="White" />
			</StackPanel>

		</Grid>

		<Grid Grid.Row="2">

			<!-- Dynamic map -->
			<win:Grid>
				<dynamicmap:GoogleMapControl ViewModel="{Binding}"
											 SelectionMode="Single"
											 PushpinIconsPositionOrigin="0.5,1"
											 PushpinIcon="ms-appx:///Assets/DynamicMap/pin_bleu_normal_base.png"
											 SelectedPushpinIcon="ms-appx:///Assets/DynamicMap/pin_red_selection_base.png"
											 AutolocateButtonVisibility="Visible" />
			</win:Grid>

			<!--Android-->
			<android:Grid>
				<dynamicmap:GoogleMapControl ViewModel="{Binding}"
											 SelectionMode="Single"
											 AutolocateButtonVisibility="Collapsed"
											 dynamicmap:MapControlBehavior.PushpinImageSelector="{StaticResource PushpinEntityToMapPin}" />
			</android:Grid>

			<!-- iOS -->
			<ios:Grid>
				<!--GoogleMapControl requires an API key on iOS, contrary to MapControl. See how to set this in the md file.-->
				<dynamicmap:GoogleMapControl ViewModel="{Binding}"
											 ios:ShowPointsOfInterest="{Binding [IsPointOfInterestShown]}"
											 SelectionMode="Single"
											 AutolocateButtonVisibility="Collapsed"
											 PushpinIcon="Assets/DynamicMap/pin_bleu_normal_base.png"
											 SelectedPushpinIcon="Assets/DynamicMap/pin_red_selection_base.png" />
			</ios:Grid>

			<!--Reticle-->
			<Rectangle Width="50"
					   Height="2"
					   Fill="Black"
					   IsHitTestVisible="False"
					   HorizontalAlignment="Center"
					   VerticalAlignment="Center" />
			<Rectangle Width="2"
					   Height="50"
					   Fill="Black"
					   IsHitTestVisible="False"
					   HorizontalAlignment="Center"
					   VerticalAlignment="Center" />
		</Grid>


		<Grid VerticalAlignment="Bottom"
			  HorizontalAlignment="Stretch"
			  Margin="20"
			  Grid.Row="2">

			<StackPanel Margin="0,0,10,0"
						HorizontalAlignment="Left"
						Visibility="{Binding [IsTooFar], Converter={StaticResource IsTrueToCollapsed}, FallbackValue=Collapsed}">
				<!-- Add Pushpin button -->
				<Button Content="Add Pushpin"
						Command="{Binding [AddPushpin]}"
						HorizontalContentAlignment="Center"
						Margin="0,10" />

				<!-- Remove Selected Pushpin button -->
				<Button Content="Remove Selected Pushpin"
						Command="{Binding [RemoveSelectedPushpin]}"
						HorizontalContentAlignment="Center"
						Margin="0,10" />
			</StackPanel>

			<!-- Current location button -->
			<Button x:Name="CurrentLocationButton"
					Command="{Binding [LocateMe]}"
					Width="Auto"
					Grid.Column="1"
					Margin="4,0,0,0"
					VerticalAlignment="Bottom"
					HorizontalAlignment="Right"
					Style="{StaticResource ActiveButtonMapIconCircularStyle}">
				<!-- location icon -->
				<Path Data="M13,11c0,1.1-0.9,2-2,2s-2-0.9-2-2s0.9-2,2-2S13,9.9,13,11z M22,11c0,0.6-0.4,1-1,1h-2c0,0,0,0-0.1,0
	c-0.5,3.6-3.3,6.5-6.9,6.9c0,0,0,0,0,0.1v2c0,0.6-0.4,1-1,1s-1-0.4-1-1v-2c0,0,0,0,0-0.1c-3.6-0.5-6.5-3.3-6.9-6.9c0,0,0,0-0.1,0H1
	c-0.6,0-1-0.4-1-1s0.4-1,1-1h2c0,0,0,0,0.1,0C3.5,6.4,6.4,3.5,10,3.1c0,0,0,0,0-0.1V1c0-0.6,0.4-1,1-1s1,0.4,1,1v2c0,0,0,0,0,0.1
	c3.6,0.5,6.5,3.3,6.9,6.9c0,0,0,0,0.1,0h2C21.6,10,22,10.4,22,11z M16,11c0-2.8-2.2-5-5-5s-5,2.2-5,5s2.2,5,5,5S16,13.8,16,11z"
					  Stretch="UniformToFill"
					  Width="24"
					  Height="24"
					  Margin="7"
					  VerticalAlignment="Center"
					  Fill="{StaticResource Color01Brush}"
					  HorizontalAlignment="Center" />
			</Button>

		</Grid>

		<StackPanel Orientation="Vertical"
					Grid.Row="3"
					Padding="10">
			<StackPanel Orientation="Horizontal"
						Padding="0,4">
				<Button Content="Locate me"
						Command="{Binding [LocateMe]}"
						Margin="4,0"/>
				<Button Content="Update Viewport"
						Command="{Binding [UpdateViewPort]}"
						Margin="4,0"/>
			</StackPanel>
			<StackPanel Orientation="Horizontal">
				<TextBlock Text="Latitude:"
						   Margin="0,0,20,0" />
				<TextBox Text="{Binding [ViewPortLatitude], Mode=TwoWay}" />
			</StackPanel>
			<StackPanel Orientation="Horizontal">
				<TextBlock Text="Longitude:"
						   Margin="0,0,20,0" />
				<TextBox Text="{Binding [ViewPortLongitude], Mode=TwoWay}" />
			</StackPanel>
			<!--This is only supported on iOS-->
			<ios:CheckBox Content="Show points of interest"
						  IsChecked="{Binding [IsPointOfInterestShown], Mode=TwoWay}" />
			<!--To demo showing/hiding points of interest. Press this and check the checkbox on and off to see the difference-->
			<Button Content="Center on point of interest"
					Command="{Binding [CenterOnPOI]}"
					Margin="0,10,0,0"/>
		</StackPanel>

		<!-- Too far banner -->
		<Grid x:Name="TooFarBanner"
			  Grid.Row="4"
			  Visibility="{Binding [IsTooFar], Converter={StaticResource IsTrueToVisible}, FallbackValue=Collapsed}"
			  VerticalAlignment="Bottom"
			  Padding="16,0"
			  Height="72"
			  Background="{StaticResource Color03Brush}">

			<StackPanel VerticalAlignment="Center"
						HorizontalAlignment="Left">
				<TextBlock Style="{StaticResource Typo02}"
						   MaxLines="1"
						   Text="You're too far!" />

				<TextBlock Style="{StaticResource Typo01}"
						   Text="We cannot display your pushpins."
						   toolkit:VisibleBoundsPadding.PaddingMask="All" />
			</StackPanel>
		</Grid>
	</Grid>
</Page>
