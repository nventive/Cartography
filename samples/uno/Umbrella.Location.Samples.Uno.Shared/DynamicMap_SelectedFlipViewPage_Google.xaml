<Page x:Class="Umbrella.Location.Samples.Uno.DynamicMap_SelectedFlipViewPage_Google"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:xamarin="http:///umbrella/ui/xamarin"
	  xmlns:toolkit="using:Uno.UI.Toolkit"
	  xmlns:android="http:///umbrella/ui/android"
	  xmlns:ios="http:///umbrella/ui/ios"
	  xmlns:local="using:Umbrella.Location.Samples.Uno.Shared"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:u="using:Umbrella.View.Controls"
	  xmlns:dynamicmap="using:Umbrella.Location.DynamicMap"
	  xmlns:converters="using:Umbrella.Location.Samples.Uno.Converters"
	  xmlns:uc="using:Umbrella.View.Converters"
	  mc:Ignorable="xamarin android ios">

	<Page.Resources>
		<ResourceDictionary>
			<uc:FromNullableBoolToCustomValueConverter x:Key="IsSelectedToBorderBrush"
													   TrueValue="Blue"
													   NullOrFalseValue="Black" />

			<converters:FromPushpinEntityToStringConverter x:Key="PushpinEntityToMapPin"
														   DefaultValue="ms-appx:///Assets/DynamicMap/pin_bleu_normal_base.png"
														   SelectedValue="ms-appx:///Assets/DynamicMap/pin_red_selection_base.png" />

			<DataTemplate x:Key="FlipViewItemTemplate">
				<Border BorderThickness="2"
						CornerRadius="5"
						Background="White"
						BorderBrush="{Binding IsTileSelected, Converter={StaticResource IsSelectedToBorderBrush}}"
						Margin="12,0,0,0">
					<StackPanel Width="120"
								Height="100">
						<Border Height="40"
								Background="AliceBlue" />

						<TextBlock Text="{Binding Name}"
								   FontSize="18" />

						<TextBlock Text="{Binding Coordinates.Latitude}" />

						<TextBlock Text="{Binding Coordinates.Longitude}" />
					</StackPanel>
				</Border>
			</DataTemplate>

		</ResourceDictionary>
	</Page.Resources>


	<Grid Background="White">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<!-- CommandBar -->
		<CommandBar Content="Flipview Sample (Google)"
					Grid.Row="0" />

		<!--Windows-->
		<!-- In order to show the map in Windows, you must set a default MapControl style. Otherwise, nothing will be displayed -->
		<win:Grid Grid.Row="1">
			<dynamicmap:GoogleMapControl ViewModel="{Binding}"
										 SelectionMode="Single"
										 PushpinIconsPositionOrigin="0.5,1"
										 SelectedPushpinIcon="ms-appx:///Assets/DynamicMap/pin_bleu_normal_choisi.png"
										 PushpinIcon="ms-appx:///Assets/DynamicMap/pin_bleu_normal_base.png"
										 AutolocateButtonVisibility="Visible" />
		</win:Grid>

		<!--Android-->
		<android:Grid Grid.Row="1">
			<dynamicmap:GoogleMapControl ViewModel="{Binding}"
										 SelectionMode="Single"
										 AutolocateButtonVisibility="Collapsed"
										 dynamicmap:MapControlBehavior.PushpinImageSelector="{StaticResource PushpinEntityToMapPin}" />
		</android:Grid>

		<!-- iOS -->
		<ios:Grid Grid.Row="1">
			<!--GoogleMapControl requires an API key on iOS, contrary to MapControl. See how to set this in the md file.-->
			<dynamicmap:GoogleMapControl ViewModel="{Binding}"
										 SelectionMode="Single"
										 AutolocateButtonVisibility="Collapsed"
										 PushpinIcon="Assets/DynamicMap/pin_bleu_normal_base.png"
										 SelectedPushpinIcon="Assets/DynamicMap/pin_red_selection_base.png" />
		</ios:Grid>

		<StackPanel Grid.Row="1"
					VerticalAlignment="Bottom"
					toolkit:VisibleBoundsPadding.PaddingMask="All">
			<!-- Locate me button -->
			<Grid Margin="0,0,16,16"
				  x:Name="CurrentLocationGrid"
				  Grid.Row="2"
				  HorizontalAlignment="Right">

				<!-- Current location button -->
				<Button x:Name="CurrentLocationButton"
						Command="{Binding [LocateMe]}"
						Width="Auto"
						Margin="4,0,0,0"
						Style="{StaticResource ActiveButtonMapIconCircularStyle}">
					<!-- location icon -->
					<Path Data="M13,11c0,1.1-0.9,2-2,2s-2-0.9-2-2s0.9-2,2-2S13,9.9,13,11z M22,11c0,0.6-0.4,1-1,1h-2c0,0,0,0-0.1,0
	c-0.5,3.6-3.3,6.5-6.9,6.9c0,0,0,0,0,0.1v2c0,0.6-0.4,1-1,1s-1-0.4-1-1v-2c0,0,0,0,0-0.1c-3.6-0.5-6.5-3.3-6.9-6.9c0,0,0,0-0.1,0H1
	c-0.6,0-1-0.4-1-1s0.4-1,1-1h2c0,0,0,0,0.1,0C3.5,6.4,6.4,3.5,10,3.1c0,0,0,0,0-0.1V1c0-0.6,0.4-1,1-1s1,0.4,1,1v2c0,0,0,0,0,0.1
	c3.6,0.5,6.5,3.3,6.9,6.9c0,0,0,0,0.1,0h2C21.6,10,22,10.4,22,11z M16,11c0-2.8-2.2-5-5-5s-5,2.2-5,5s2.2,5,5,5S16,13.8,16,11z"
						  Stretch="UniformToFill"
						  Width="24"
						  Height="24"
						  Margin="7"
						  VerticalAlignment="Center"
						  Fill="{StaticResource Color01Brush}"
						  HorizontalAlignment="Center" />
				</Button>
			</Grid>

			<!-- A PeekingFlipView issue requires us to explicitly set the default style on Windows, and have it set implicitly on Xamarin -->
			<!--https://feedback.nventive.com/communities/1/topics/3532-peekingflipview-non-functionnal-on-ios-and-android-->
			<xamarin:Grid>
				<u:PeekingFlipView ItemsSource="{Binding [Pushpins]}"
								   ItemTemplate="{StaticResource FlipViewItemTemplate}"
								   SelectedIndex="{Binding [SelectedFlipViewIndex], Mode=TwoWay}"
								   VerticalAlignment="Bottom"
								   Padding="100,0"
								   Margin="0,0,0,24"
								   Height="100" />
			</xamarin:Grid>

			<win:Grid>
				<u:PeekingFlipView Style="{StaticResource DefaultPeekingFlipViewStyle}"
								   ItemsSource="{Binding [Pushpins]}"
								   ItemTemplate="{StaticResource FlipViewItemTemplate}"
								   SelectedIndex="{Binding [SelectedFlipViewIndex], Mode=TwoWay}"
								   VerticalAlignment="Bottom"
								   Padding="100,0"
								   Margin="0,0,0,24"
								   Height="160" />
			</win:Grid>
		</StackPanel>
	</Grid>
</Page>
